<?xml version="1.0"?>
<records xmlns="http://scientific.thomsonreuters.com/schema/wok5.4/public/Fields"><REC r_id_disclaimer="ResearcherID data provided by Clarivate Analytics"><UID>WOS:000357125000006</UID><static_data><fullrecord_metadata><fund_ack><grants count="3"><grant><grant_agency>Poland's National Science Centre (Narodowe Centrum Nauki)</grant_agency><grant_ids count="2"><grant_id>2011/01/N/ST10/01483</grant_id><grant_id>2012/06/M/ST10/00434</grant_id></grant_ids></grant><grant><grant_agency>European Union 7 FP ACTRIS (Aerosol, Clouds, and Trace gases Research InfraStructure) network</grant_agency><grant_ids count="1"><grant_id>262254</grant_id></grant_ids></grant><grant><grant_agency>US National Science Foundatio</grant_agency></grant></grants></fund_ack><abstracts count="1"><abstract><abstract_text count="1"><p>This paper introduces a library of algorithms for representing cloud microphysics in numerical models. The library is written in C++, hence the name libcloudph++. In the current release, the library covers three warm-rain schemes: the single- and double-moment bulk schemes, and the particle-based scheme with Monte Carlo coalescence. The three schemes are intended for modelling frameworks of different dimensionalities and complexities ranging from parcel models to multi-dimensional cloud-resolving (e.g. large-eddy) simulations. A two-dimensional (2-D) prescribed-flow framework is used in the paper to illustrate the library features. The libcloudph++ and all its mandatory dependencies are free and open-source software. The Boost.units library is used for zero-overhead dimensional analysis of the code at compile time. The particle-based scheme is implemented using the Thrust library that allows one to leverage the power of graphics processing units (GPU), retaining the possibility of compiling the unchanged code for execution on single or multiple standard processors (CPUs). The paper includes a complete description of the programming interface (API) of the library and a performance analysis including comparison of GPU and CPU set-ups.</p></abstract_text></abstract></abstracts></fullrecord_metadata></static_data><dynamic_data><cluster_related/></dynamic_data></REC></records>
