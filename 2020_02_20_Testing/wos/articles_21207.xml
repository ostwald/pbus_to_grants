<?xml version="1.0"?>
<records xmlns="http://scientific.thomsonreuters.com/schema/wok5.4/public/Fields"><REC r_id_disclaimer="ResearcherID data provided by Clarivate Analytics"><UID>WOS:000416509900030</UID><static_data><fullrecord_metadata><fund_ack><grants count="1"><grant><grant_agency>National Science Foundation</grant_agency><grant_ids count="3"><grant_id>OCI-1127228</grant_id><grant_id>OCI-1127340</grant_id><grant_id>OCI-1127341</grant_id></grant_ids></grant></grants></fund_ack><abstracts count="1"><abstract><abstract_text count="1"><p>This tutorial presents the details of the interconnection network utilized in many high performance computing (HPC) systems today. "InfiniBand" is the hardware interconnect utilized by over 35% of the top 500 supercomputers in the world as of June, 2017. "Verbs" is the term used for both the semantic description of the interface in the InfiniBand architecture specifications, and the name used for the functions defined in the widely used OpenFabrics alliance implementation of the software interface to InfiniBand. "Message passing interface" is the primary software library by which HPC applications portably pass messages between processes across a wide range of interconnects including InfiniBand. Our goal is to explain how these three components are designed and how they interact to provide a powerful, efficient interconnect for HPC applications. We provide a succinct look into the inner technical workings of each component that should be instructive to both novices to HPC applications as well as to those who may be familiar with one component, but not necessarily the others, in the design and functioning of the total interconnect. A supercomputer interconnect is not a monolithic structure, and this tutorial aims to give non-experts a "big-picture" overview of its substructure with an appreciation of how and why features in one component influence those in others. We believe this is one of the first tutorials to discuss these three major components as one integrated whole. In addition, we give detailed examples of practical experience and typical algorithms used within each component in order to give insights into what issues and trade-offs are important.</p></abstract_text></abstract></abstracts></fullrecord_metadata></static_data><dynamic_data><cluster_related/></dynamic_data></REC></records>
